name: "Tag Merged PR"

description: "Tag Merged PR"

inputs:
  github_token:
    description: "GitHub Access Token"
    required: true
  owner:
    description: "Repo owner"
    required: true
  repo:
    description: "Repo name"
    required: true
  commit_sha:
    description: "Commit SHA"
    required: true
runs:
  using: "composite"
  steps:
    - name: Get PR number
      uses: actions/github-script@v6
      id: pr-number
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const pr = (
            await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: ${{ inputs.owner }},
              repo: ${{ inputs.repo }},
              commit_sha: ${{ inputs.commit_sha }},
            })
          ).data[0];

          if (!pr) {
            console.log("No PR found for commit ${{ inputs.commit_sha }}");
            return -1;
          }

          return pr.number
    - name: Setup GIT
      if: ${{ steps.pr-number.outputs.result != -1 }}
      env:
        GITHUB_TOKEN: ${{ inputs.github_token}}
      uses: raycast/github-actions/setup-git@master
    - name: Checkout PR
      if: ${{ steps.pr-number.outputs.result != -1 }}
      shell: bash
      run: gh pr checkout ${{ steps.pr-number.outputs.result }}
      env:
        GITHUB_TOKEN: ${{ inputs.github_token}}
    - name: Tag merged commit
      shell: bash
      if: ${{ steps.pr-number.outputs.result != -1 }}
      env:
        GITHUB_TOKEN: ${{ inputs.github_token}}
      run: |
        pr_info=$(gh pr view ${{ steps.pr-number.outputs.result }} --json headRefName,headRepository,headRepositoryOwner,maintainerCanModify,url)
        echo $pr_info
        can_modify=$(echo $pr_info | jq -r .maintainerCanModify)
        if [[ "$can_modify" == "false" ]]; then
          error="Edits from maintainers are disabled."
          echo $error
          exit 0
        fi

        pr_branch=$(echo $pr_info | jq -r .headRefName)
        pr_repo_name=$(echo $pr_info | jq -r .headRepository.name)
        pr_repo_owner=$(echo $pr_info | jq -r .headRepositoryOwner.login)

        git tag -f -a __raycast_latest_merged_$pr_branch__ -m "Used by the Ray CLI to track the latest commit that was merged"

        git push https://${{ env.GITHUB_TOKEN }}@github.com/$pr_repo_owner/$pr_repo_name.git __raycast_latest_merged_$pr_branch__
